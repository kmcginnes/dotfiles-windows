[alias]
    s = !git status -s && git stash list

    b = branch -vv
    br = branch --remotes -vv
    rename = branch -m

    co = checkout
    cob = checkout -b

    cm = commit -m
    cam = !git add -A && git commit -m
    amend = commit --amend

    rc = rebase --continue

    dt = difftool --no-prompt
    mt = mergetool

    lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    new = "!git lg2 `git rev-parse --abbrev-ref --symbolic-full-name @{u}`.."
    diff-dev = "!git lg2 develop.."
    dd = "!git diff-dev"

    unstage = reset HEAD
    uncommit = reset --soft HEAD^
    undo = reset HEAD^

    up = "!git pull --rebase --stat && git lg2 ORIG_HEAD.."

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = warn

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and
    # all kinds of trailing whitespace as an error.
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of
    # a line
    whitespace = space-before-tab,tab-in-indent,trailing-space,tabwidth=4
    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false

[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
    branch = magenta
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"

[push]
    default = simple
[pull]
    rebase = true
